spring.application.name=cjq-web
server.port=8002

eureka.client.serviceUrl.defaultZone=http://admin:admin@localhost:8863/eureka/

#健康检测
eureka.client.healthcheck.enabled=true

#点对点直连测试配置
# 关闭ribbon访问注册中心Eureka Server发现服务，但是服务依旧会注册。
#true使用eureka false不使用
ribbon.eureka.enabled=true
#是否启用重试
spring.cloud.loadbalancer.retry.enabled=true
#指定调用的节点（ribbon.eureka.enabled=false时有用，一般用在单元测试时,与soa框架的动态扩容相违背）
#cjq-order.ribbon.listOfServers=localhost:8001
#单位ms ,请求连接超时时间
cjq-order.ribbon.ConnectTimeout=1000
#单位ms ,请求处理的超时时间
cjq-order.ribbon.ReadTimeout=2000

#是否所有接口都重试
cjq-order.ribbon.OkToRetryOnAllOperations=true
#切换实例的重试次数
cjq-order.ribbon.MaxAutoRetriesNextServer=2
#对当前实例的重试次数 当Eureka中可以找到服务，但是服务连不上时将会重试
cjq-order.ribbon.MaxAutoRetries=2

cjq-order.ribbon.NFLoadBalancerRuleClassName=com.netflix.loadbalancer.RandomRule
#cjq-order.ribbon.NFLoadBalancerPingClassName=com.netflix.loadbalancer.PingUrl
cjq-order.ribbon.NFLoadBalancerPingClassName=com.netflix.loadbalancer.NoOpPing